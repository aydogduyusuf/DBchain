// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package db

import (
	"context"
)

type Querier interface {
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateToken(ctx context.Context, arg CreateTokenParams) (Token, error)
	CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteToken(ctx context.Context, id int64) error
	DeleteTransaction(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetSession(ctx context.Context, id int64) (Session, error)
	GetToken(ctx context.Context, id int64) (Token, error)
	GetTokenByAddress(ctx context.Context, contractAddress string) (Token, error)
	GetTokenByUIDAndContract(ctx context.Context, arg GetTokenByUIDAndContractParams) (Token, error)
	GetTokenForUpdate(ctx context.Context, id int64) (Token, error)
	GetTransaction(ctx context.Context, id int64) (Transaction, error)
	GetTransactionByAddress(ctx context.Context, transferData string) (Transaction, error)
	GetUser(ctx context.Context, username string) (User, error)
	GetUserFromID(ctx context.Context, id int64) (User, error)
	ListDeploysByTime(ctx context.Context, arg ListDeploysByTimeParams) ([]Transaction, error)
	ListDeploysByUser(ctx context.Context, arg ListDeploysByUserParams) ([]Transaction, error)
	ListTokens(ctx context.Context, uID int64) ([]Token, error)
	ListTransactionsByToken(ctx context.Context, transferData string) ([]Transaction, error)
	ListTransactionsByTypeFrom(ctx context.Context, arg ListTransactionsByTypeFromParams) ([]Transaction, error)
	ListTransactionsByTypeTo(ctx context.Context, arg ListTransactionsByTypeToParams) ([]Transaction, error)
	ListTransfersByTimeFrom(ctx context.Context, arg ListTransfersByTimeFromParams) ([]Transaction, error)
	ListTransfersByTimeTo(ctx context.Context, arg ListTransfersByTimeToParams) ([]Transaction, error)
	UpdateToken(ctx context.Context, arg UpdateTokenParams) (Token, error)
}

var _ Querier = (*Queries)(nil)
